FROM --platform=x86-64 node:16-alpine as front_builder
WORKDIR /front
COPY ./ui /front
RUN (cd /front && yarn install --frozen-lockfile && yarn build) && yarn cache clean

FROM --platform=x86-64 node:16-alpine as deps
WORKDIR /app
COPY srv/package.json srv/yarn.lock srv/checkSystemDeps.ts /app/
COPY srv/prisma /app/prisma

# mpv и ffmpeg на данном этапе устанавливаются для чекалки system-wide зависимостей
RUN apk add --no-cache ffmpeg mpv libc6-compat openssl && \
  (cd /app && yarn install --frozen-lockfile && yarn db:gen) && \
  yarn cache clean

FROM --platform=x86-64 node:16-alpine as builder
WORKDIR /app
COPY ./srv /app/.
COPY --from=deps /app/node_modules /app/node_modules
RUN (cd /app && yarn service:build && yarn db:gen)

FROM --platform=x86-64 node:16-bullseye as runner
WORKDIR /app
COPY --from=deps /app/node_modules /app/node_modules
COPY --from=builder /app/dist /app/dist
COPY srv/package.json srv/yarn.lock srv/.env /app/
COPY --from=front_builder /front/build /app/front
COPY ./dockerMisc/run.sh /app/run.sh

RUN npm i -g local-web-server && \
  apt update && apt install -y ffmpeg mpv openssl libgtk-3-dev libgconf-2-4 libatk1.0-0 libatk-bridge2.0-0 libgdk-pixbuf2.0-0 libgtk-3-0 libgbm-dev libnss3-dev libxss-dev && \
  chmod +x /app/run.sh && \
  apt-get clean autoclean && \
  apt-get autoremove --yes && \
  rm -rf /var/lib/{apt,dpkg,cache,log}/

EXPOSE 3000
CMD ["bash", "/app/run.sh"]
